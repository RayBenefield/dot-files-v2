snippet table "A DynamoDB Table."
"${1:Table}": {
    "Type": "AWS::DynamoDB::Table",
    "Properties": {
        "TableName": "$1",
        "ProvisionedThroughput": {
            "ReadCapacityUnits": ${2:1},
            "WriteCapacityUnits": ${3:1}
        },
        "AttributeDefinitions": [
            {
                "AttributeName": "$4",
                "AttributeType": "${5:S}"
            }${8:,
            {
                "AttributeName": "$7",
                "AttributeType": "${9:S}"
            }}
        ],
        "KeySchema": [
            {
                "AttributeName": "${4:Attribute}",
                "KeyType": "HASH"
            }${6:,
            {
                "AttributeName": "${7:Attribute}",
                "KeyType": "RANGE"
            }}
        ]${10:,
        "StreamSpecification": {
            "StreamViewType": "NEW_AND_OLD_IMAGES"
        }}
    }
}
endsnippet

snippet attribute "A DynamoDB Attribute."
{
    "AttributeName": "${1:Attribute}",
    "AttributeType": "${2:S}"
}
endsnippet

snippet output "A CloudFormation Output variable."
"${1:Key}": {
    "Description": "${2:Description}",
    "Value": { "Ref": "${3:LogicalId}" }
}
endsnippet

snippet role "A IAM role."
"${1:Role}": {
    "Type": "AWS::IAM::Role",
    "Properties": {
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "",
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                }
            ]
        },
        "ManagedPolicyArns": [
            "arn:aws:iam::789201490085:policy/lambda_basic_execution_role_policy_7889af1c-44c9-4841-8228-b63a2a89050b",
            "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
            "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
        ]
    }
}
endsnippet

snippet func "A Lambda function."
"${1:Function}": {
    "Type": "AWS::Lambda::Function",
    ${7:"DependsOn": [ "${8:Resource}" ],}
    "Properties": {
        "FunctionName": "$1",
        "Description": "${2:Description}",
        "Runtime": "java8",
        "Handler": "com.cartographerapi.functions.$1",
        "Code": {
            "S3Bucket": "${3:cartographer-api-lambda-code}",
            "S3Key": "$1-0.0.1-SNAPSHOT.jar"
        },
        "Role": { "Fn::GetAtt": ["${4:CartographerApiLambdaRole}", "Arn"] },
        "Timeout": "${5:15}",
        "MemorySize": "${6:512}"
    }
}
endsnippet

snippet stream "A Stream EventSource for a Lambda Function."
"${1:Stream}": {
    "Type": "AWS::Lambda::EventSourceMapping",
    ${4:"DependsOn": [ ${5:Resource} ],}
    "Properties": {
        "Enabled": true,
        "EventSourceArn": {
            "Fn::GetAtt": [ "${2:Table}", "StreamArn" ]
        },
        "FunctionName": {
            "Fn::GetAtt": [ "${3:Function}", "Arn" ]
        },
        "StartingPosition": "LATEST"
    }
}
endsnippet

snippet topic "An SNS topic."
"${1:Topic}": {
	"Type": "AWS::SNS::Topic",
	"Properties": {
		"DisplayName": "$1",
		"TopicName": "${2:Name}",
		"Subscription": [
			${3:{
				"Endpoint": "${4:Arn}",
				"Protocol": "${5:sqs}"
			}}
		]
	}
}
endsnippet

snippet sub "A Subscription for an SNS topic."
{
	"Endpoint": ${1:Arn},
	"Protocol": "${2:sqs}"
}
endsnippet

snippet getatt "The GetAttribute function for CloudFormation."
{ "Fn::GetAtt": [ "${1:Resource}", "${2:Attribute}" ] }
endsnippet

snippet depends "The DependsOn property for CloudFormation resources."
"DependsOn": [ "${1:Resource}" ],
endsnippet

snippet permission "A Lambda permission."
"${1:Permission}": {
	"Type": "AWS::Lambda::Permission",
	"Properties": {
		"Action": "lambda:*",
		"FunctionName": ${2:Arn},
		"Principal": "${3:sns.amazonaws.com}",
		"SourceArn": ${4:Arn}
	}
}
endsnippet

snippet ref "The Reference function for CloudFormation."
{ "Ref": "${1:Resource}" }
endsnippet

snippet queue "An SQS Queue."
"${1:Queue}": {
	"Type": "AWS::SQS::Queue",
	"Properties": {
		"QueueName": "${2:Queue}"
	}
}
endsnippet

snippet queuePolicy "A Policy defining access for an SQS Queue."
"${1:Policy}": {
	"Type" : "AWS::SQS::QueuePolicy",
	"Properties" : {
		"PolicyDocument" : ${2:Policy},
		"Queues" : [ ${3:QueueArn} ]
	}
}
endsnippet

snippet restApi "An API Gateway Rest API."
"${1:Api}": {
	"Type" : "AWS::ApiGateway::RestApi",
	"Properties" : {
		"Name" : "$1",
		"Description" : "${2:Description}",
		"BodyS3Location" : {
			"Bucket" : "${3:Bucket}",
			"Key" : "${4:Key}"
		}
	}
}
endsnippet
