[include]
	path = ~/.gituser
[diff]
	tool = vimdiff
	mnemonicprefix = true
	renames = copies
[difftool]
	prompt = false
[alias]
	a = add .
	p = pull --rebase
	f = fetch --all
	d = difftool
	st = status -u
	ci = commit
	br = branch
	co = checkout
    un = reset HEAD --
	unstage = reset HEAD --
	last = log -1 HEAD
	l = log --oneline
	prstash = "!f() { git fetch $1 refs/pull-requests/$2/from:$3; } ; f"
	branch-log = git difftool develop..HEAD log issue/PTAPP-428-refine-logging-system --not  refs/heads/develop\n refs/heads/issue/PTAPP-426-convert-existing-phpunit-unit-tests\n refs/heads/issue/PTAPP-429-the-final-destination-system\n refs/heads/master\n refs/heads/pullrequests/pr-11\n refs/heads/pullrequests/pr-12
	pretty = log --graph --oneline --decorate
	refresh = reset --hard @{u}
	rf = reset --hard @{u}
	show-files = show --pretty="format:" --name-only
	sf = show --pretty="format:" --name-only
	re = rebase -i --autosquash
	rs = reset
	clearWithIgnore = rm --cached `git ls-files -i --exclude-from=.gitignore`
	amend = commit -a --amend --no-edit
	ad = commit -a --amend --no-edit
	unad = reset HEAD@{1}
	fix = !sh -c 'REV=$(git rev-parse $1) && git commit --fixup $@ && git stash -u && GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash $REV^ && git stash pop' -
	purge = "!f() { git branch -d $1 && git push origin --delete $1; }; f"
    setup = "!f() { git remote add origin $1 && git push -u origin master; }; f"
    attach = "!f() { git remote set-url --add origin $1; }; f"
[color]
	ui = true
[color "status"]
	untracked = cyan
[core]
	whitespace = trailing-space,space-before-tab
	excludesfile = ~/.gitignore
	editor = vim
[branch]
	autosetupmerge = true
[push]
	default = tracking
[merge]
	stat = true
[rerere]
	enabled = true
